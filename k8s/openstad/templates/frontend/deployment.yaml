---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openstad.frontend.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openstad.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "openstad.frontend.fullname" . }}-deployment
spec:
  replicas: {{ .Values.frontend.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.frontend.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.label }}
    spec:
      containers:
        - name: {{ template "openstad.frontend.fullname" . }}
          image: {{ .Values.frontend.deploymentContainer.image }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.frontend.service.httpPort }}
              protocol: TCP
          env:
            - name: LOGO_AMSTERDAM
              value: 'yes'
            - name: OPENSTAD_COMPONENTS_CDN
              value: 'https://unpkg.com/@savvycodes/openstad-components@0.32.0-beta.6/dist'
            - name: OPENSTAD_REACT_ADMIN_CDN
              value: 'https://unpkg.com/@savvycodes/openstad-react-admin@0.33.0-beta.1/dist'
            - name: DEFAULT_HOST
              value: www.{{ .Values.host.base }}
            - name: APP_URL
              value: https://www.{{ .Values.host.base }}
            - name: API
              value: https://{{ template "openstad.api.url" . }}
            - name: IMAGE_API_URL
              value: https://{{ template "openstad.image.url" . }}
            - name: MINIFY_JS
              value: 'ON'
            - name: APOS_WORKFLOW
              value: 'ON'
            - name: NODE_ENV
              value: 'production'
            - name: APOS_BUNDLE
              value: 'assets'
            - name: GOOGLE_MAPS_API_KEY
              value: "{{ .Values.frontend.googleMapsApiKey }}"
            - name: COOKIE_MAX_AGE
              value: "{{ .Values.frontend.cookieMaxAge }}"
            - name: IMAGE_API_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  key: image_api_token
                  name: openstad-auth-credentials

            - name: HOST_DOMAIN
              valueFrom:
                secretKeyRef:
                  key: frontend
                  name: openstad-hosts
            - name: PORT
              value: {{ .Values.frontend.service.httpPort | quote }}
            - name: SITE_API_KEY
              valueFrom:
                secretKeyRef:
                  key: fixed_token
                  name: openstad-auth-credentials
            - name: MONGO_DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  key: frontend-connection-string
                  name: mongo-secret
            - name: MONGO_DB_HOST
              valueFrom:
                secretKeyRef:
                  key: hostname
                  name: openstad-mongo-credentials
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: hostname
                  name: openstad-mongo-credentials
            - name: MONGO_DB_PORT
              valueFrom:
                secretKeyRef:
                  key: hostport
                  name: openstad-mongo-credentials
            - name: MONGO_DB_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: openstad-mongo-credentials
            - name: MONGO_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mongo-secret
            - name: MONGO_DB_AUTHSOURCE
              valueFrom:
                secretKeyRef:
                  key: auth-source
                  name: openstad-mongo-credentials
            - name: DEFAULT_DB
              valueFrom:
                secretKeyRef:
                  key: database
                  name: openstad-mongo-credentials
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace

            - name: APOS_S3_BUCKET
              valueFrom:
                secretKeyRef:
                  key: bucket
                  name: openstad-frontend-s3

            - name: APOS_S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: openstad-frontend-s3

            - name: APOS_S3_KEY
              valueFrom:
                secretKeyRef:
                  key: key
                  name: openstad-frontend-s3

            - name: APOS_S3_SECRET
              valueFrom:
                secretKeyRef:
                  key: secret
                  name: openstad-frontend-s3

            - name: APOS_S3_REGION
              valueFrom:
                secretKeyRef:
                  key: region
                  name: openstad-frontend-s3

            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP

            - name: SMTP_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: openstad-api-mail
            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: openstad-api-mail
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: openstad-api-mail
            - name: SMTP_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: openstad-api-mail
            - name: SMTP_SECURE
              value: "false"

{{- if and .Values.frontend.ingress.enabled (or (not .Values.clusterIssuer.useProdIssuer) (eq (index .Values.frontend.ingress.annotations "cert-manager.io/cluster-issuer" | default "") "letsencrypt-staging")) }}
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
{{- end }}

          resources:
{{ toYaml .Values.frontend.resources | indent 12 }}
{{- if (not .Values.frontend.S3.bucket) }}
          volumeMounts:
            - mountPath: /home/app/public/uploads
              name: data-uploads
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
{{- if (not .Values.frontend.S3.bucket) }}
      volumes:
        - name: data-uploads
          persistentVolumeClaim:
            claimName: frontend-uploads-claim
{{- end }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.frontend.label }}
            topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.image.label }}
              topologyKey: doks.digitalocean.com/node-id
