---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openstad.image.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openstad.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ template "openstad.image.fullname" . }}-deployment
spec:
  replicas: {{ .Values.image.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.image.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.image.label }}
    spec:
      containers:
      - name: {{ template "openstad.image.fullname" . }}
        image: {{ .Values.image.deploymentContainer.image }}
        imagePullPolicy: Always
        ports:
            - name: http
              containerPort: {{ .Values.image.service.httpPort }}
        env:
          - name: NODE_ENV
            value: production
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: hostname
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: openstad-image-db
                key: database
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secret
                key: mysql-password
          - name: MYSQL_CA_CERT
            valueFrom:
              secretKeyRef:
                name: openstad-db-credentials
                key: ca-cert
          - name: APP_URL
            value: https://{{ template "openstad.image.url" . }}
          - name: FIRST_IMAGE_API_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: image_api_token
                name: openstad-auth-credentials
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        resources:
{{ toYaml .Values.image.resources | indent 12 }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.image.service.httpPort }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.image.service.httpPort }}
          initialDelaySeconds: {{ .Values.image.probe.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.image.probe.liveness.periodSeconds }}
        volumeMounts:
          - mountPath: /app/images
            name: data-vol
      initContainers:
      - name: volume-mount-fix
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /app/images"]
        volumeMounts:
        - name: data-vol
          mountPath: /app/images
      - name: create-db-ready
        image: {{ .Values.image.deploymentContainer.image }}
        imagePullPolicy: Always
        env:
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: openstad-image-db
              key: database
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: openstad-db-credentials
              key: hostname
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: openstad-db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        command: ["/bin/sh","-c"]
        args: ['knex migrate:latest']
      volumes:
        - name: data-vol
          persistentVolumeClaim:
            claimName: image-data-claim

      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.image.label }}
            topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.frontend.label }}
              topologyKey: "kubernetes.io/hostname"
